#include <iostream>
#include <algorithm>
using namespace std;

bool isPalindrome(string s) {
    int l = 0, r = s.size() - 1;
    while (l < r) {
        if (s[l++] != s[r--])
            return false;
    }

    return true;

}

bool isAnagram(string s1, string s2) {
    if (s1.size() != s2.size()) return false;
    
    sort(s1.begin(), s1.end());
    sort(s2.begin(), s2.end());

    for (int i = 0; i < s1.size(); i++) {
        if (s1[i] != s2[i]) return false;
    }
    
    return true;
}

void dfs(int u, int p) {
    if (visited[u])
        return true; // found cycle
    visited[u] = 1;
    for (auto v : g[u]) {
        if (v == p) continue;
        if (!visited[v])
            dfs(v, u);
    }
}

    void dfs(int y, int x) {
        grid[y][x] = '#';
        for (int i = 0; i < 4; i++) {
            int ny = y + dy[i], nx = x + dx[i];
            if (ny >= 0 && nx >= 0 && ny < grid.size() && nx < grid[0].size() && grid[ny][nx] == '.') {
                dfs(ny, nx);
            }
        }
    }

    for (int y = 0; y < grid.size(); y++) {
        for (int x = 0; x < grid[0].size(); x++) {
            if (grid[y][x] == '.') {
                count++;
                dfs(y, x);
            }
        }
}

// string == char array -> mutable


int main() {
    string s1 = "abba", s2 = "acba";

    cout << isPalindrome(s1) << endl;
    cout << isPalindrome(s2) << endl;

}

# How to become good at study

unordered item
- list item 1
- list item 2
- list item 3

ordered item

1 item 1
2 item 2
3 item 3

> some quote

***

lorem ipsum ...

![](img link)
[](hyper link..)


